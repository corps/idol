// DO NOT EDIT
// This file was generated by idol_graphql_queries, any changes will be overwritten when idol_graphql_queries is run again.;
import { FieldFragment } from "../../schema/Field";
import { TypeStructFragment } from "../../schema/TypeStruct";
import { ReferenceFragment } from "../../schema/Reference";
import { gql } from "graphql-tag";

// A wrapper type containing fields that can describe a Type, as well as its tag metadata.;
export const SchemaTypeFragment = gql`
  fragment TypeFields on Type {
    fields {
      ...FieldFields
    }
    is_a {
      ...TypeStructFields
    }
    named {
      ...ReferenceFields
    }
    options
    tags
  }
  ${FieldFragment}
  ${TypeStructFragment}
  ${ReferenceFragment}
`;
