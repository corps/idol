//  @flow
// DO NOT EDIT
// This file was generated by idol_flow, any changes will be overwritten when idol_flow is run again.
import type { FieldPayload as ScaffoldFieldPayload } from "../../schema/Field";
import type { TypeStructPayload as ScaffoldTypeStructPayload } from "../../schema/TypeStruct";
import type { ReferencePayload as ScaffoldReferencePayload } from "../../schema/Reference";
import { ReferenceFactory as ScaffoldReferenceFactory } from "../../schema/Reference";

export interface SchemaTypePayload {
  fields: { [k: string]: ScaffoldFieldPayload };
  is_a: ScaffoldTypeStructPayload | null | typeof undefined;
  named: ScaffoldReferencePayload;
  options: Array<string>;
  tags: Array<string>;
}

export const SchemaTypeFactory: () => SchemaTypePayload = () => ({
  fields: (() => ({}))(),
  is_a: (() => null)(),
  named: ScaffoldReferenceFactory(),
  options: (() => [])(),
  tags: (() => [])()
});
