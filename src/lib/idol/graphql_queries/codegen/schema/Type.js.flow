// DO NOT EDIT
// This file was generated by idol_graphql_queries, any changes will be overwritten when idol_graphql_queries is run again.;
import { SchemaFieldFragment } from "./Field";
import { SchemaTypeStructFragment } from "./TypeStruct";
import { SchemaReferenceFragment } from "./Reference";
import { gql } from "graphql-tag";

// A wrapper type containing fields that can describe a Type, as well as its tag metadata.;
export const SchemaTypeFragment = gql`
  fragment SchemaTypeFields on SchemaType {
    fields {
      ...SchemaFieldFields
    }
    is_a {
      ...SchemaTypeStructFields
    }
    named {
      ...SchemaReferenceFields
    }
    options
    tags
  }
  ${SchemaFieldFragment}
  ${SchemaTypeStructFragment}
  ${SchemaReferenceFragment}
`;
