# DO NOT EDIT
# This file was generated by idol_py, any changes will be lost when idol_py is rerun again
from ....__idol__ import Struct, Map, List as List_, Primitive
from typing import Dict, List
from ...schema.type import Type as ScaffoldType
from ...schema.dependency import Dependency as ScaffoldDependency


class SchemaModule(Struct):
    abstract_types_by_name: Dict[str, ScaffoldType]
    dependencies: List[ScaffoldDependency]
    module_name: str
    types_by_name: Dict[str, ScaffoldType]
    types_dependency_ordering: List[str]
    __field_constructors__ = [
        ("abstract_types_by_name", "abstract_types_by_name", Map.of(ScaffoldType, {})),
        ("dependencies", "dependencies", List_.of(ScaffoldDependency, {})),
        ("module_name", "module_name", Primitive.of(str)),
        ("types_by_name", "types_by_name", Map.of(ScaffoldType, {})),
        ("types_dependency_ordering", "types_dependency_ordering", List_.of(Primitive.of(str), {})),
    ]
