//  @flow
// DO NOT EDIT
// This file was generated by idol_flow, any changes will be overwritten when idol_flow is run again.;
import type { OptionalParamsPayload as ScaffoldOptionalParamsPayload } from "../../../all/target/OptionalParams";
import { OptionalParamsFactory as ScaffoldOptionalParamsFactory } from "../../../all/target/OptionalParams";
import type { AssembledOptionalPayload as ScaffoldAssembledOptionalPayload } from "../../../all/target/AssembledOptional";
import { AssembledOptionalFactory as ScaffoldAssembledOptionalFactory } from "../../../all/target/AssembledOptional";

export interface AllTargetOptionalMethodPayload {
  input: ScaffoldOptionalParamsPayload;
  output: ScaffoldAssembledOptionalPayload;
}
export const AllTargetOptionalMethodFactory: () => AllTargetOptionalMethodPayload = () => ({
  input: ScaffoldOptionalParamsFactory(),
  output: ScaffoldAssembledOptionalFactory()
});
